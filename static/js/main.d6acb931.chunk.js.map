{"version":3,"sources":["component/Main.js","component/Weather.js","App.js","index.js"],"names":["Main","props","setCity","fetchWeather","className","type","autoFocus","placeholder","onChange","e","target","value","onClick","Weather","weather","sunriseSec","sys","sunrise","Date","timeSunrise","getHours","getMinutes","sunsetSec","sunset","timeSunset","weatherMode","main","useState","mode","setMode","useEffect","temp","name","country","toLocaleDateString","toLocaleTimeString","temp_max","temp_min","humidity","wind","speed","pressure","App","city","setWeather","GetData","axios","get","then","response","data","catch","error","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6acb931.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Main(props) {\r\n    const {setCity,fetchWeather}=props\r\n    return (\r\n       <>\r\n            <div className=\"mainContener\">\r\n            <h1>Weather App</h1>\r\n                <input type=\"search\" autoFocus=\"true\" placeholder=\"Enter Your CityName / Zip\" onChange={(e)=>{setCity(e.target.value)}}/>\r\n                <button type=\"submit\" onClick={fetchWeather}>Click</button>\r\n            </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, { useEffect, useState } from 'react'\r\nfunction Weather(props) {\r\n    const {weather}=props;\r\n    // // second to min convert\r\n    let sunriseSec=weather.sys.sunrise;\r\n    let sunrise=new Date(sunriseSec * 1000);\r\n    let timeSunrise=`${sunrise.getHours()}:${sunrise.getMinutes()}`\r\n\r\n    let sunsetSec=weather.sys.sunset;\r\n    let sunset=new Date(sunsetSec * 1000);\r\n    let timeSunset=`${sunset.getHours()}:${sunset.getMinutes()}`\r\n    \r\n    // cloud img\r\n    let weatherMode=weather.weather[0].main\r\n    const [mode, setMode] = useState()\r\n    useEffect(()=>{\r\n        if(weatherMode){\r\n            switch(weatherMode){\r\n                case \"Clear\":\r\n                    setMode(\"wi-day-sunny\");\r\n                    break;\r\n                case \"Clouds\":\r\n                    setMode(\"wi-day-cloudy\");\r\n                    break;\r\n                case \"Haze\":\r\n                    setMode(\"wi-fog\");\r\n                    break;\r\n                case \"Rain\":\r\n                    setMode(\"wi-day-thunderstorm\");\r\n                    break;\r\n                default:\r\n                    setMode(\"wi-cloud\");\r\n            }\r\n        }\r\n    },[weatherMode])\r\n    return (\r\n        <>\r\n            <div className=\"weatherContener\">\r\n                <div className=\"topSection\">\r\n                    <h2><i className=\"fas fa-thermometer-half\"></i>{weather.main.temp}&deg;C &nbsp;<span><i className={`wi ${mode}`}></i>{weatherMode}</span></h2>\r\n                </div>\r\n                <div className=\"location\">\r\n                    <h1><i className=\"fas fa-street-view\"></i>{`${weather.name} , ${weather.sys.country}`}</h1>\r\n                    <div className=\"date_time\">\r\n                        <h3>{new Date().toLocaleDateString()},</h3>\r\n                        <h3>{new Date().toLocaleTimeString()}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"weatherInfo\">\r\n                    <h3>Weather Info</h3>\r\n                    <div className=\"fistRow\">\r\n                        <div className=\"firstColum\">\r\n                            <i className=\"wi wi-day-sunny\"></i>\r\n                            <div className=\"info\">\r\n                                <h4>{weather.main.temp_max}&deg;C</h4>\r\n                                <p>max Temp</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"secondColum\">\r\n                            <i className=\"wi wi-day-haze\"></i>\r\n                            <div className=\"info\">\r\n                                <h4>{weather.main.temp_min}&deg;C</h4>\r\n                                <p>min Temp</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"thirdColum\">\r\n                            <i className=\"wi wi-humidity\"></i>\r\n                            <div className=\"info\">\r\n                                <h4>{weather.main.humidity}</h4>\r\n                                <p>humidity</p>\r\n                            </div>\r\n                        </div>\r\n                    </div> <br /> <br />\r\n                    <div className=\"secondRow\">\r\n                        <div className=\"firstColum\">\r\n                            <i className=\"wi wi-sunrise\"></i>\r\n                            <div className=\"info\">\r\n                                <h4>{timeSunrise} AM</h4>\r\n                                <p>sunrise</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"secondColum\">\r\n                            <i className=\"wi wi-sunset\"></i>\r\n                            <div className=\"info\">\r\n                                <h4>{timeSunset} PM</h4>\r\n                                <p>sunset</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"thirdColum\">\r\n                            <i className=\"wi wi-barometer\"></i>\r\n                            <div className=\"info\">\r\n                                <h4>{weather.wind.speed}</h4>\r\n                                <p>wind</p>\r\n                            </div>\r\n                        </div>\r\n                    </div> <br /> <br />\r\n                    <div className=\"thirdRow\">\r\n                        <div className=\"firstColum\">\r\n                            <i className=\"wi wi-fog\"></i>\r\n                            <div className=\"info\">\r\n                                <h4>{weather.main.pressure}</h4>\r\n                                <p>presure</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React, { useEffect, useState } from 'react'\nimport Main from './component/Main'\nimport Weather from './component/Weather'\nimport axios from 'axios'\n\nconst Api_Key=\"aaa2f82a69c06ab16be84cc35449b6f2\"\n\nfunction App() {\n  \n  const [city, setCity] = useState(\"odisha\")\n  const [weather, setWeather] = useState()\n\n  //api Call\n  let GetData=  () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${Api_Key}`)\n    .then((response)=>{\n      setWeather(response.data);\n      // console.log(weather);\n    })\n    .catch((error)=>{\n      console.log(error);\n    })\n  }\n  \n  useEffect(()=>{\n    GetData()\n  },[])\n\n  return (\n    <div className=\"appContener\">\n      <Main  setCity={setCity} fetchWeather={GetData}/>\n      {\n        weather ? (\n          <Weather weather={weather}/>\n        ) :(\n          <h1>Data Not Fond</h1>\n        )\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}